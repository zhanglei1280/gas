{"version":3,"sources":["redux/boxReducer.js","redux/store.js","Box.js","App.js","Form.js","index.js"],"names":["boxReducer","state","arguments","length","undefined","action","type","data","store","createStore","combineReducers","box","Box","start","end","Object","classCallCheck","this","list","Array","fill","map","e","i","shuffle","_this","forEach","arr","j","tmp","swap","randfloat","Math","random","floor","randint","shift","App","num","locked","add","setState","_this$props$box","props","getList","count","animation","setInterval","clearInterval","setTimeout","pick","render","react_default","a","createElement","className","onClick","disabled","Component","connect","Form","onInput","where","value","parseInt","target","onOK","preventDefault","_this$state","dispatch","onChange","jsx","es","src_Form","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5f4c8562.chunk.js","sourcesContent":["const boxDefaultState = null\r\n\r\nexport default (state = boxDefaultState, action) => {\r\n    switch(action.type){\r\n        case \"SETBOX\":\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {createStore, combineReducers} from \"redux\"\r\nimport boxReducer from \"./boxReducer\"\r\n\r\nconst configureStore = () => (\r\n    createStore(combineReducers({\r\n        box: boxReducer\r\n    }))\r\n)\r\n\r\nconst store = configureStore()\r\n\r\nexport default store\r\n","const swap = (arr, i, j) => {\r\n    let tmp = arr[i]\r\n    arr[i] = arr[j]\r\n    arr[j] = tmp\r\n}\r\n\r\nconst randint = (start, end) => {\r\n    const random = Math.random()\r\n    const randfloat = (end-start)*random + start\r\n    return Math.floor(randfloat)\r\n}\r\n\r\nclass Box{\r\n    constructor(start, end){\r\n        this.list = (new Array(end-start+1))\r\n            .fill(0)\r\n            .map((e,i)=>start+i)\r\n        this.shuffle()\r\n    }\r\n\r\n    getList(){\r\n        return this.list\r\n    }\r\n\r\n    shuffle(){\r\n        this.list.forEach((e, i) => {\r\n            swap(this.list, i, randint(0, this.list.length))\r\n        })\r\n    }\r\n\r\n    pick(){\r\n        return this.list.shift()\r\n    }\r\n}\r\n\r\n// var box = new Box(1, 50)\r\n// console.log(box.pick())\r\n\r\nexport default Box\r\n// module.exports = Box\r\n","import React, { Component } from 'react'\r\nimport Box from \"./Box\"\r\nimport {connect} from \"react-redux\"\r\n\r\nclass App extends Component{\r\n    state = {\r\n        num: 0,\r\n        locked: false\r\n    }\r\n\r\n\r\n    add = () => {\r\n        this.setState(() => ({locked: true}))\r\n        var {start, end, box} = this.props.box\r\n        if(end - start < 25){\r\n            end = start + 25\r\n        }\r\n        var list = (new Box(start, end)).getList()\r\n        var count = 1\r\n        var animation = setInterval(() => {\r\n            this.setState(() => ({num: list.shift()}))\r\n            count++\r\n            if(count >= 20){\r\n                clearInterval(animation)\r\n                // critical\r\n                setTimeout(() => {\r\n                    this.setState(() => ({\r\n                        num: box.pick(),\r\n                        locked: false\r\n                    }))\r\n                }, 0)\r\n            }\r\n        }, 50)\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n            {\r\n                this.props.box\r\n                ? (\r\n                    <div>\r\n                        <h1 className=\"title\">{this.state.num}</h1>\r\n                        <div className=\"field\">\r\n                            <div>{\r\n                                this.state.locked\r\n                                ? \"locked\"\r\n                                : \"not locked\"\r\n                            }</div>\r\n                            <div className=\"control\">\r\n                            <button\r\n                            className=\"button is-primary\"\r\n                            onClick={\r\n                                this.state.locked\r\n                                ? null\r\n                                : this.add\r\n                            }\r\n                            disabled={this.state.locked}\r\n                            >Submit</button> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n                : \"\"\r\n            }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = state => ({\r\n    box: state.box\r\n})\r\n\r\nexport default connect(mapStatetoProps)(App)\r\n","import React, { Component } from 'react'\r\nimport Box from \"./Box\"\r\nimport {connect} from \"react-redux\"\r\n\r\nclass Form extends Component{\r\n    state = {\r\n        start: 1,\r\n        end: 50\r\n    }\r\n\r\n    onInput = where => e => {\r\n        const value = parseInt(e.target.value)\r\n        if(where == \"start\"){\r\n            this.setState(() => ({start: value}))\r\n        }else{\r\n            this.setState(() => ({end: value}))\r\n        }\r\n    }\r\n\r\n    onOK = e => {\r\n        e.preventDefault()\r\n        const {start, end} = this.state\r\n        var box = new Box(start, end)\r\n        this.props.dispatch({\r\n            type: \"SETBOX\",\r\n            data: {\r\n                start,\r\n                end,\r\n                box\r\n            }\r\n        })\r\n    }\r\n\r\n    render = () => (\r\n        <div>\r\n            <div className=\"field\">\r\n                <label className=\"label\">Start</label>\r\n                <div className=\"control\">\r\n                <input \r\n                    className=\"input\"\r\n                    type=\"text\" \r\n                    value={this.state.start}\r\n                    onChange={this.onInput(\"start\")}          \r\n                />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n                <label className=\"label\">End</label>\r\n                <div className=\"control\">\r\n                <input \r\n                    className=\"input\"\r\n                    type=\"text\" \r\n                    value={this.state.end}\r\n                    onChange={this.onInput(\"end\")}          \r\n                />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n                <div className=\"control\">\r\n                    <button\r\n                     className=\"button is-link\"\r\n                     onClick={this.onOK}\r\n                     >ok</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStatetoProps = state => ({\r\n    box: state.box\r\n})\r\n\r\nexport default connect(mapStatetoProps)(Form)\r\n","import React from 'react'\r\nimport {render} from \"react-dom\"\r\nimport store from \"./redux/store\"\r\nimport {Provider} from \"react-redux\"\r\n\r\nimport App from \"./App\"\r\nimport Box from \"./Box\"\r\nimport Form from \"./Form\"\r\n\r\nimport \"bulma/css/bulma.css\"\r\nimport \"./index.css\"\r\n\r\nconst box = new Box(1, 50)\r\n\r\nconst jsx = (\r\n    <div className=\"padding\">\r\n        <Provider store={store}>\r\n            <Form />\r\n            <App />\r\n        </Provider>\r\n    </div>\r\n)\r\n\r\nrender(jsx, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}